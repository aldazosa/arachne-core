(ns arachne.core.config.impl.common
  (:require [clojure.walk :as w]
            [arachne.core.config :as cfg]))

(defn- non-record-map?
  "Return true for maps which are not also records"
  [v]
  (and (map? v)
    (not (instance? clojure.lang.IRecord v))))

(defn add-and-replace-tempids
  "Replace generic arachne.core.config.Tempid instances with
  implementation-specific tempids (generated by the provided function), and
  assign any entity map missing a :db/id a novel tempid."
  [partition data tempid-fn]
  (w/prewalk (fn [val]
               (cond
                 (instance? arachne.core.config.Tempid val)
                 (if (:id val)
                   (tempid-fn partition (:id val))
                   (tempid-fn partition))
                  (and (non-record-map? val)
                    (not (:db/id val))) (assoc val :db/id (tempid-fn partition))
                  :else val))
    data))

